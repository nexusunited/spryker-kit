name: 'Deploy'

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build-tags:
    runs-on: ubuntu-latest
    steps:
      - name: install tree
        run: sudo apt update && sudo apt install tree -y

      - name: Get tag name
        id: tag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - uses: actions/checkout@v3

      - name: set gradle opts
        uses: allenevans/set-env@v2.0.0
        with:
          GRADLE_OPTS: '-Dorg.gradle.daemon=false'

      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: set gradle user home
        run: export GRADLE_USER_HOME=`pwd`/.gradle

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: create chain credentials
        uses: finnp/create-file-action@1.0.0
        env:
          FILE_NAME: ".ssl-keys/chain.crt"
          FILE_DATA: $CHAIN_CERT

      - name: create chain credentials
        uses: finnp/create-file-action@1.0.0
        env:
          FILE_NAME: ".ssl-keys/private.pem"
          FILE_DATA: $PRIVATE_PEM

      - name: create chain credentials
        uses: finnp/create-file-action@1.0.0
        env:
          FILE_NAME: ".ssl-keys/password.txt"
          FILE_DATA: $PASSWORD_TXT

      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.4

      - name: build twig cache
        run: ./build_twig_cache.sh

      - name: build plugin deploy
        run: ./gradlew buildPlugin

      - name: deploy plugin to marketplace
        run: ./gradlew publishPlugin

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.VERSION }}
          name: Release ${{ steps.tag.outputs.VERSION }}
          body: cat CHANGELOG.md